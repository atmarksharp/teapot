<project name="ivy-sample" default="run" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="lib" value="lib" />
  <property name="local" value="local" />
  <property name="gen" value="gen" />
  <property name="main-class" value="Teapot" />
  <property name="jar-name" value="teapot" />
  <property name="version" value="0.10.3b" />

  <path id="lib.path.id">
    <fileset dir="${lib}"/>
  </path>

  <!-- resolve -->
  <target name="resolve">
    <ivy:retrieve pattern="${lib}/[artifact].[ext]"/>
  </target>

  <target name="insert-version">
    <taskdef name="groovy"
         classname="org.codehaus.groovy.ant.Groovy"
         classpathref="lib.path.id"/>
    <delete dir="${gen}"/>
    <mkdir dir="${gen}"/>
    <groovy>
      <arg value="${main-class}.java"/>
      <arg value="${gen}"/>
      <arg value="${version}"/>
      <![CDATA[
      String filename = args[0]
      String outDir = args[1]
      String version = args[2]
      String content = new File(filename).text
      String newContent = content.replaceAll("___VERSION___",version)
      new File(outDir + "/" + filename).withWriter{ it << newContent }
      println("wrote: " + outDir + "/" + filename)
      ]]>
    </groovy>
  </target>

  <!-- compile -->
  <target name="compile" depends="resolve,insert-version">
    <javac classpath="${local}/jsonic.jar:${lib}/commons-io.jar" srcdir="${gen}" destdir="${basedir}" includes="${main-class}.java" source="1.6" target="1.6" debug="true"/>
  </target>

  <!-- jar -->
  <target name="jar" depends="compile">
    <delete file="${jar-name}-${version}.jar"/>
    <jar jarfile="${jar-name}-${version}.jar">
      <zipgroupfileset dir="${lib}" includes="**/*.jar"/>
      <zipgroupfileset dir="${local}" includes="**/*.jar"/>
      <fileset dir="${basedir}" includes="${main-class}.class"/>
      <manifest>
        <attribute name="Main-Class" value="${main-class}"/>
      </manifest>
    </jar>
  </target>

  <!-- run -->
  <target name="run" depends="compile">
    <mkdir dir="build"/>
    <java classpath="${local}/jsonic.jar:${lib}/commons-io.jar:." classname="${main-class}" fork="true">
      <arg value="install"/>
      <arg value="com.google.inject"/>
      <arg value="guice"/>
      <arg value="3.0"/>
      <arg value="-d"/>
      <arg value="build"/>
    </java>
  </target>
</project>